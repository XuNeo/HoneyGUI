# for module compiling
import os
Import('PLATFORM')
from building import *


objs = []
cwd  = GetCurrentDir()
math_cwd = cwd + '/math'
list = os.listdir(cwd)


if GetDepend(['CONFIG_REALTEK_BUILD_ARM_2D']):
    CPPDEFINES = ['ENABLE_AMR_2D']


    src = Split("""""")
    src += Glob(cwd + '/Arm-2D/Library/Source/*.c')
    src += Glob(cwd + '/Arm-2D/Helper/Source/*.c')
    src += Glob(cwd + '/Arm-2D/examples/common/asset/*.c')
    src += Glob(cwd + '/Arm-2D/examples/common/benchmark/*.c')
    src += Glob(cwd + '/Arm-2D/examples/common/controls/*.c')
    src += Glob(cwd + '/RTE/*.c')

    if PLATFORM == 'gcc':
        src += Glob(math_cwd + '/*.c')

                    
    path = [cwd + '/Arm-2D']
    path += [cwd + '/Arm-2D/Library/Include']
    path += [cwd + '/Arm-2D/Helper/Include']
    path += [cwd + '/Arm-2D/examples/common/benchmark']
    path += [cwd + '/Arm-2D/examples/common/controls']
    path += [cwd + '/RTE']
    if PLATFORM == 'gcc':
        path += [math_cwd]
        path += [math_cwd + '/dsp']
        
    if PLATFORM == 'gcc':
        CPPDEFINES += ['__va_list=va_list']
        CPPDEFINES += ['_RTE_=1']
        # CPPDEFINES += [' ARM_SECTION\(x\)=']
    objs = DefineGroup('realgui/3rd/Arm2d', src, depend = ['CONFIG_REALTEK_BUILD_ARM_2D'], CPPPATH = path, CPPDEFINES = CPPDEFINES)


for d in list:
    path = os.path.join(cwd, d)
    if os.path.isfile(os.path.join(path, 'SConscript')):
        objs = objs + SConscript(os.path.join(d, 'SConscript'))

Return('objs')
